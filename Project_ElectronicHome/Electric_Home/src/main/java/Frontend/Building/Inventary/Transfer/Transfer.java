/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frontend.Building.Inventary.Transfer;

import javax.swing.event.TableModelEvent;
import javax.swing.table.TableModel;

/**
 *
 * @author phily
 */
public class Transfer extends javax.swing.JFrame {

    /**
     * Creates new form Transfer
     */
    public Transfer() {
        initComponents();
        
        setLastColumnListener();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_hearder = new javax.swing.JPanel();
        lbl_code = new javax.swing.JLabel();
        txt_Code = new javax.swing.JTextField();
        txtF_From = new javax.swing.JTextField();
        lbl_name = new javax.swing.JLabel();
        lbl_brand = new javax.swing.JLabel();
        txtF_To = new javax.swing.JTextField();
        scrollPanel_txtA = new javax.swing.JScrollPane();
        txtA_reason = new javax.swing.JTextArea();
        lbl_reason = new javax.swing.JLabel();
        lbl_brand1 = new javax.swing.JLabel();
        txtF_To1 = new javax.swing.JTextField();
        lbl_brand2 = new javax.swing.JLabel();
        txtF_To2 = new javax.swing.JTextField();
        btn_transfer = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        panel_Transfer = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_transfer = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        panel_hearder.setBorder(javax.swing.BorderFactory.createTitledBorder("Header"));

        lbl_code.setFont(new java.awt.Font("Inter", 1, 13)); // NOI18N
        lbl_code.setText("State");
        lbl_code.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txt_Code.setEditable(false);

        txtF_From.setEditable(false);

        lbl_name.setFont(new java.awt.Font("Inter", 1, 13)); // NOI18N
        lbl_name.setText("Since");
        lbl_name.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbl_brand.setFont(new java.awt.Font("Inter", 1, 13)); // NOI18N
        lbl_brand.setText("To");
        lbl_brand.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtF_To.setEditable(false);

        txtA_reason.setEditable(false);
        txtA_reason.setColumns(20);
        txtA_reason.setRows(3);
        txtA_reason.setTabSize(5);
        scrollPanel_txtA.setViewportView(txtA_reason);

        lbl_reason.setFont(new java.awt.Font("Inter", 1, 13)); // NOI18N
        lbl_reason.setText("Reason");

        lbl_brand1.setFont(new java.awt.Font("Inter", 1, 13)); // NOI18N
        lbl_brand1.setText("Code");
        lbl_brand1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtF_To1.setEditable(false);
        txtF_To1.setText("aquí va A QUIEN sele hará la transfer");
        txtF_To1.setToolTipText("");

        lbl_brand2.setFont(new java.awt.Font("Inter", 1, 13)); // NOI18N
        lbl_brand2.setText("To:");
        lbl_brand2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtF_To2.setEditable(false);

        btn_transfer.setText("Request/Transfer");

        jCheckBox1.setText("Done");

        javax.swing.GroupLayout panel_hearderLayout = new javax.swing.GroupLayout(panel_hearder);
        panel_hearder.setLayout(panel_hearderLayout);
        panel_hearderLayout.setHorizontalGroup(
            panel_hearderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_hearderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_hearderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPanel_txtA)
                    .addGroup(panel_hearderLayout.createSequentialGroup()
                        .addComponent(lbl_reason)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panel_hearderLayout.createSequentialGroup()
                        .addGroup(panel_hearderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbl_brand1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtF_To2, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_hearderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbl_code, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_Code, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_hearderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_name, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtF_To, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_hearderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_brand, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtF_From, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 183, Short.MAX_VALUE)
                        .addComponent(btn_transfer, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_hearderLayout.createSequentialGroup()
                        .addComponent(lbl_brand2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtF_To1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBox1)))
                .addContainerGap())
        );
        panel_hearderLayout.setVerticalGroup(
            panel_hearderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_hearderLayout.createSequentialGroup()
                .addGroup(panel_hearderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panel_hearderLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(panel_hearderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_brand2)
                            .addComponent(txtF_To1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panel_hearderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_code)
                            .addComponent(lbl_brand)
                            .addComponent(lbl_brand1)
                            .addComponent(lbl_name))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_hearderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_Code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtF_To, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtF_From, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtF_To2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_hearderLayout.createSequentialGroup()
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_transfer, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)))
                .addComponent(lbl_reason)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPanel_txtA, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panel_Transfer.setBorder(javax.swing.BorderFactory.createTitledBorder("Transference"));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        table_transfer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Code", "Name", "Brand", "StockID", "Price", "Available", "Requested", "", "To send"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table_transfer);
        if (table_transfer.getColumnModel().getColumnCount() > 0) {
            table_transfer.getColumnModel().getColumn(0).setResizable(false);
            table_transfer.getColumnModel().getColumn(0).setPreferredWidth(90);
            table_transfer.getColumnModel().getColumn(1).setPreferredWidth(190);
            table_transfer.getColumnModel().getColumn(2).setResizable(false);
            table_transfer.getColumnModel().getColumn(2).setPreferredWidth(150);
            table_transfer.getColumnModel().getColumn(3).setResizable(false);
            table_transfer.getColumnModel().getColumn(3).setPreferredWidth(100);
            table_transfer.getColumnModel().getColumn(4).setResizable(false);
            table_transfer.getColumnModel().getColumn(4).setPreferredWidth(90);
            table_transfer.getColumnModel().getColumn(5).setResizable(false);
            table_transfer.getColumnModel().getColumn(5).setPreferredWidth(80);
            table_transfer.getColumnModel().getColumn(6).setResizable(false);
            table_transfer.getColumnModel().getColumn(6).setPreferredWidth(80);
            table_transfer.getColumnModel().getColumn(7).setResizable(false);
            table_transfer.getColumnModel().getColumn(7).setPreferredWidth(10);
            table_transfer.getColumnModel().getColumn(8).setResizable(false);
            table_transfer.getColumnModel().getColumn(8).setPreferredWidth(70);
        }

        javax.swing.GroupLayout panel_TransferLayout = new javax.swing.GroupLayout(panel_Transfer);
        panel_Transfer.setLayout(panel_TransferLayout);
        panel_TransferLayout.setHorizontalGroup(
            panel_TransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_TransferLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        panel_TransferLayout.setVerticalGroup(
            panel_TransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_TransferLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panel_Transfer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel_hearder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel_hearder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panel_Transfer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

//SOLO PODRÁ EDITAR si el TO es igual al nombre de la tienda en la que trabaja el respectivo encargado de inventario
    
    private void setLastColumnListener(){
        TableModel modelo = table_transfer.getModel();//no es nec el DefaultTableModel...

        modelo.addTableModelListener((TableModelEvent e) -> {
            setMaximunTransferable();
        });
                
    }//solo porque creo que en java no se puede pasar una función como argumento así como en react, para incocarla en lugar de obtner el valor, entonces se quedará aquí la función...
    
    private void setMaximunTransferable(){
        int value = (Integer) table_transfer.getModel()
                    .getValueAt(table_transfer.getSelectedRow(),
                                table_transfer.getSelectedColumn());
        int limit = (Integer) table_transfer.getModel()
                    .getValueAt(table_transfer.getSelectedRow(),
                                (table_transfer.getSelectedColumn())-1);//aunque lo ideal sería. Exe una query...
    
        if(value > limit){
            table_transfer.getModel()
                    .setValueAt(limit,
                                table_transfer.getSelectedRow(),
                                table_transfer.getSelectedColumn());
    }//no hay que poner IF aquí porque, si se exe el evt queire decir que hay filas y si hay filas YA hay datos...    
}
    
//será para solo ver o para transferir, dependdiendo del TO
    //si no ha sido DONE, entonces QUNATITY sende será 0, else aparecerá la cantidad corresp...
    
//SI FROM es igual a la office en la que está el de inventario, el check box aparecerá
    //para que así pueda marcarlo como DONE si es el caso...
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_transfer;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_brand;
    private javax.swing.JLabel lbl_brand1;
    private javax.swing.JLabel lbl_brand2;
    private javax.swing.JLabel lbl_code;
    private javax.swing.JLabel lbl_name;
    private javax.swing.JLabel lbl_reason;
    private javax.swing.JPanel panel_Transfer;
    private javax.swing.JPanel panel_hearder;
    private javax.swing.JScrollPane scrollPanel_txtA;
    private javax.swing.JTable table_transfer;
    private javax.swing.JTextArea txtA_reason;
    private javax.swing.JTextField txtF_From;
    private javax.swing.JTextField txtF_To;
    private javax.swing.JTextField txtF_To1;
    private javax.swing.JTextField txtF_To2;
    private javax.swing.JTextField txt_Code;
    // End of variables declaration//GEN-END:variables
}
